@use '../../styles/mixins';
@use '../../styles/variables.scss' as var;

.wrapper {
	display: grid;
	grid-template: 10% 90% / 3fr auto;
	gap: var.$micro-small-space;
	width: 100%;
	height: 100%;
	border-radius: var.$small-border;
	padding: var.$micro-small-space;
	grid-area: 1 / 2 / 2 / 3;

	@include mixins.min-width(small) {
		padding: 0;
	}

	.containerCatgory {
		@include mixins.flex($align: center, $justify: start);
		padding: var.$small-space;
		width: 100%;
		background-color: var.$clear-color-1;
		border-radius: var.$small-border;

		h2 {
			@include mixins.font($font: var.$font, $size: var.$text, $color: var.$clear-color-3, $weight: 500);
			font-style: italic;
		}
	}

	.containerToolBar {
		@include mixins.flex($align: center, $justify: start);
		width: 100%;
		gap: var.$small-space;

		.btnKit {
			@include mixins.flex($align: center, $justify: start);
			@include mixins.font($font: var.$font, $size: var.$text, $color: var.$clear-color-1, $weight: 600);
			gap: var.$micro-small-space;
			height: 100%;
			padding: var.$small-space;
			border-radius: var.$small-border;
			background-color: var.$medium-1;
			cursor: pointer;
			transition: all 0.3s ease-in-out;

			&:hover {
				background-color: var.$highlight-2;
			}

			.icon {
				font-size: 1em;
			}
		}

		.btnLike {
			@include mixins.flex($align: center, $justify: center);
			padding: var.$small-space;
			height: 100%;
			border-radius: var.$small-border;
			cursor: pointer;
			background-color: var.$medium-1;
			transition: all 0.3s ease-in-out;

			&:hover {
				background-color: var.$highlight-2;
			}

			.animation {
				width: 50px;
			}
		}
	}

	.containerInfo {
		@include mixins.flex($align: start, $justify: start);
		width: 100%;
		height: 100%;
		background-color: var.$clear-color-1;
		padding: var.$small-space;
		gap: var.$small-space;
		border-radius: var.$small-border;

		@include mixins.min-width(small) {
			flex-direction: column;
			grid-area: 2/1/3/3;
		}

		.title {
			@include mixins.font($font: var.$font, $size: var.$bigTitle-3, $color: var.$dark-color-2, $weight: 900);

			@include mixins.min-width(small) {
				font-size: var.$bigTitle-1;
			}
		}
		.measure {
			@include mixins.font($font: var.$font, $size: var.$text, $color: var.$dark-color-2, $weight: 600);
		}
		.containerMeasure {
			@include mixins.flex($direction: column, $align: start, $justify: start);
			width: 100%;
			gap: var.$slim-space;
			overflow: auto;

			.containerBtnMeasure {
				@include mixins.flex($align: start, $justify: start);
				width: 100%;
				gap: var.$small-space;

				.btnMeasure {
					@include mixins.font($font: var.$font, $size: var.$text, $color: var.$clear-color-2, $weight: 600);
					padding: var.$micro-small-space;
					border-radius: var.$micro-small-space;
					background-color: var.$dark-color-2;
				}
			}
		}
		.containerText {
			@include mixins.flex($align: center, $justify: start);
			@include mixins.font($font: var.$font, $size: var.$text, $color: var.$dark-color-2, $weight: 600);

			@include mixins.min-width(small) {
				width: 50%;
			}
		}

		.containerCta {
			@include mixins.flex($align: start, $justify: start);
			padding: var.$small-space 0;
			gap: var.$small-space;
			width: 100%;

			.btnCta {
				@include mixins.flex($align: center, $justify: center);
				@include mixins.font($font: var.$font, $size: var.$text, $color: var.$clear-color-1, $weight: 600);
				padding: var.$small-space;
				height: 100%;
				border-radius: var.$small-border;
				cursor: pointer;
				background-color: var.$medium-1;
				transition: all 0.3s ease-in-out;

				&:nth-child(1) {
					background-color: var.$highlight-2;

					&:hover {
						background-color: var.$highlight-1;
					}
				}

				&:hover {
					background-color: var.$highlight-2;
				}
			}
		}
	}
}
